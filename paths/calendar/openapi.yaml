openapi: 3.0.0
tags:
  - name: calendar
    description: Belongs to the Calendar API
  - name: read
    description: 'The endpoint only reads, and does not manipulate data.'
  - name: write
    description: This endpoint will write data. Use with caution.
  - name: alpha
    description: This endpoint is still in VERY EARLY ALPHA and should be treated with caution.
info:
  title: Calendar API
  version: ''
  description: 'Endpoints for viewing and manipulating data in listing calendars, including Reservations, Availability, and Pricing.'
  contact:
    url: 'https://smartbnb.io'
    email: hello@smartbnb.io
servers:
  - url: 'https://api.smartbnb.io/calendar'
    description: Calendar endpoints
paths:
  /reservations:
    get:
      summary: Get Reservations
      tags:
        - calendar
        - read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../../models/reservation.20190904.yaml
                  _pagination:
                    $ref: ../../models/pagination.yaml
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      - uuid: 48b62e97-91bf-4c6f-af49-6dc71c16a16a
                        guest_uuid: 32a46404-1fca-49b4-966e-c88a76886135
                        provider: AIRBNB
                        reservation_code: ABSDHEUSHM
                        status: ACCEPTED
                        actionable: true
                        booked_at: '2019-08-17T16:23:54+02:00'
                        instant_booked: true
                        nights: 2
                        occupancy:
                          adults: 2
                          children: 2
                          pets: 0
                          infants: 0
                        check_in: '2019-07-22T14:00:00+02:00'
                        check_out: '2019-07-24T10:00:00+02:00'
                        subtotal:
                          amount: 19700
                          currency: EUR
                        _included:
                          - rel: guest
                            data:
                              uuid: 32a46404-1fca-49b4-966e-c88a76886135
                              first_name: Margaret
                              last_name: Hamilton
                              email: mags@gmx.de
                              phone: +44 1925 639 683
                    _pagination:
                      total: 1
                      count: 1
                      per_page: 10
                      current_page: 1
                      total_pages: 1
      operationId: get-reservations
      description: "Given listings and (optionally) check-in dates, returns a filtered list of reservations.\n\n### URL parameters\n\n- `listings[]`: Array of listing IDs to get reservations for - use as: `?listings[]=123&listings[]=456`. These are the IDs that are available in HomeAway / Airbnb, and you can also get them from the `GET /listings` endpoint.\n- `start_date`: Optional, find reservations with check-in dates after this day. Y-m-d format, defaults to today.\n- `end_date`: Optional, find reservations with check-in dates before this day. Y-m-d format, defaults to `start_date` + 14 days.\n\n\n### Allowed Includes\n\n- `guest`\n\n### Example\n\n```bash\ncurl -H 'Content-Type: application/vnd.smartbnb.20190904+json' \\\n     -H 'Authorization: Bearer <API TOKEN>' \\\n  'https://api.smartbnb.io/calendar/reservations?listings[]=123456&listings[]=654321&start_date=2019-08-31&end_date=2019-09-30'\n```"
      parameters:
        - schema:
            type: string
            enum:
              - guest
          in: query
          name: include
      security:
        - OAuth2:
            - 'read:calendar'
  '/{listingId}':
    get:
      summary: Get Calendar
      tags:
        - calendar
        - read
      parameters:
        - name: listingId
          in: path
          required: true
          description: The ID of the listing to retrieve the calendar for
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: ../../models/calendar.20191127.yaml
              examples:
                Example:
                  value:
                    data:
                      listing_id: 121.9876543.1234567
                      provider: HOMEAWAY
                      start_date: '2020-01-11'
                      end_date: '2020-01-13'
                      days:
                        - date: '2020-01-11'
                          day: SATURDAY
                          status:
                            name: AVAILABLE
                            available: true
                          price:
                            amount: 130000
                            currency: EUR
                        - date: '2020-01-12'
                          day: SUNDAY
                          status:
                            name: BLOCKED
                            available: false
                          price:
                            amount: 130000
                            currency: EUR
                        - date: '2020-01-13'
                          day: MONDAY
                          status:
                            name: RESERVED
                            available: false
                          price:
                            amount: 120050
                            currency: EUR
                      _meta:
                        rel: calendar
                        version: '20190611'
      operationId: get-calendar
      description: "Given a listing ID and (optionally) dates, returns the Pricing and Availability for the listing in calendar format.\n\n### URL parameters\n\n- `start_date`: Optional, start date for the calendar range in `Y-m-d` format, defaults to today.\n- `end_date`: Optional, end date for the calendar range in `Y-m-d` format, defaults to `start_date` + 14 days.\n\n\n### Allowed Includes\n\nNone.\n\n### Example\n\n```bash\ncurl -H 'Content-Type: application/vnd.smartbnb.20190904+json' \\\n     -H 'Authorization: Bearer <API TOKEN>' \\\n  'https://api.smartbnb.io/calendar/123456&start_date=2019-08-31&end_date=2019-09-30'\n```\n"
      security:
        - OAuth2:
            - 'read:calendar'
    put:
      summary: Update Calendar
      operationId: put-calendar
      responses:
        '202':
          description: 'Your request has been accepted and placed onto a queue to be dealt with asynchronously. In most cases, this means a few seconds.'
        '409':
          description: Conflict
        '':
          description: 'The calendar update has been accepted, and placed onto a queue to be dealt with asynchronously.'
      description: "Update a Listing's pricing, availability, and minimum stay for the given dates. This request is handled asynchronously, and therefore the pricing on your listing may take a few seconds to update after receiving a response.\n\nIt's possible to send a Property ID instead of a Listing ID, if you also send the query parameter `type=property`. There are two important distinctions to be made when sending a Property ID:\n\n1. Pricing for all listings within that Property will be updated, not just for one.\n2. A Markup will be applied to each price. This markup must be pre-configured in the Smartbnb website first. Wihout this pre-configuration, this endpoint will fail with a `409 Conflict` response.\n\n**Please note that updating availability for HomeAway is, at this time, not functional, and therefore for listings on HomeAway the `available` boolean value in the payload is ignored. You may update pricing for HomeAway as normal, though.**\n\n### Example\n\n```bash\ncurl -X PUT \\\n  https://api.smartbnb.io/calendar/123456 \\\n  -H 'Authorization: Bearer <TOKEN>' \\\n  -H 'content-type: application/vnd.smartbnb.20191231+json' \\\n  --data '[\n    {\n      \"date\": \"2020-01-11\",\n      \"available\": true,\n      \"min_stay\": 3,\n      \"price\": {\n        \"amount\": 7700,\n      }\n    },\n    {\n      \"date\": \"2020-01-12\",\n      \"available\": true,\n      \"price\": {\n        \"amount\": 7800,\n      }\n    }\n]'\n```"
      tags:
        - calendar
        - write
        - alpha
      security:
        - OAuth2:
            - 'write:calendar'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                description: Representation of a Day
                properties:
                  date:
                    type: string
                    format: date
                    example: '2020-01-31'
                    description: 'The date to set pricing and availability for, in Y-m-d format.'
                  available:
                    type: boolean
                    description: Whether the day should be available for booking. Omit if you want to leave as-is in the provider.
                  price:
                    type: object
                    required:
                      - amount
                    properties:
                      amount:
                        type: integer
                        description: Integer representation of the amount of money in question. E.g. $1.01 is represented as 101. $85 is represented as 8500.
                  min_stay:
                    type: integer
                    description: 'The minimum stay duration, in nights, for this date.'
                    minimum: 1
                required:
                  - date
                  - price
            examples:
              Example with pricing and availabiliy:
                value:
                  - date: '2020-01-11'
                    available: true
                    price:
                      amount: 7700
                  - date: '2020-01-12'
                    available: true
                    price:
                      amount: 7800
              Example with pricing only:
                value:
                  - date: '2020-01-11'
                    price:
                      amount: 7700
                  - date: '2020-01-12'
                    price:
                      amount: 7800
              Example with minimum stay:
                value:
                  - date: '2021-11-11'
                    min_stay: 10
                    price:
                      amount: 21900
                  - date: '2021-11-02'
                    price:
                      amount: 20900
        description: |
          The request payload should be an array of days including pricing and availability version. There are some constraints on this:

          - The price must be sent in the listing's default currency.
          - The endpoint will not accept more than 60 dates to update at once.
          - It is not required, but _highly recommended_ to use contiguous days if possible. This allows us to batch the requests we make to providers.
      parameters:
        - schema:
            type: string
            enum:
              - property
          in: query
          name: type
          description: Set this to `property` to set pricing for all listings in a property. Caveats apply.
    parameters:
      - schema:
          type: string
        name: listingId
        in: path
        required: true
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://auth.smartbnb.io/oauth/token'
          scopes:
            'read:calendar': read calendar data
            'write:calendar': write calendar data
